// this should be compatible with both docker and singularity because singularity can convert (?)
//process.container = "cbcrg/callings-nf@sha256:b65a7d721b9dd2da07d6bdd7f868b04039860f14fa514add975c59e68614c310"

profiles {

    tonic {
	params.gatk_dir = "/home/wittcarx/CalliNGS-NF"
        params.max_mem = "180g"
        docker.enabled = true
        docker.runOptions = "-m ${params.max_mem} -v ${params.gatk_dir}/GenomeAnalysisTK.jar:${params.gatk_dir}/GenomeAnalysisTK.jar"
        // pull from cluster registry if not done already
        process.container = "cbcrg/callings-nf@sha256:b65a7d721b9dd2da07d6bdd7f868b04039860f14fa514add975c59e68614c310"
        process.cpus = 13
    }

    dbisdockerlarge {
	params.gatk_dir = "/data/wittcarx/CalliNGS-NF"
	params.max_mem = "30g"
        docker.enabled = true
        docker.runOptions = "-m ${params.max_mem} -v ${params.gatk_dir}/GenomeAnalysisTK.jar:${params.gatk_dir}/GenomeAnalysisTK.jar"
        // pull from cluster registry if not done already
        process.container = "192.168.127.11:5000/cbcrg/callings-nf:1.0"
        process.cpus = 23
    }

    dbisdocker {
	params.gatk_dir = "/data/wittcarx/CalliNGS-NF"
	params.max_mem = "21g"
        docker.enabled = true
        docker.runOptions = "-m ${params.max_mem} -v ${params.gatk_dir}/GenomeAnalysisTK.jar:${params.gatk_dir}/GenomeAnalysisTK.jar"
        // pull from cluster registry if not done already
        process.container = "192.168.127.11:5000/cbcrg/callings-nf:1.0"
        process.cpus = 23
    }

    dbissingularity {
        singularity.enabled = true
        // as long as running the container in the directory where GenomeAnalysisTK.jar is available, we don't need an additional mount
        // unfortunately, trying to mount the dir from which the singularity container is started results in an error,
        // so we have to figure something else if the GenomeAnalysisTK.jar location and singularity container start point differ.
        // singularity.runOptions = "--bind ${params.gatk_dir}:${params.gatk_dir}"
        process.cpus = 23
    }

    gatk4 {
        process.container = 'cbcrg/callings-nf:gatk4'
        docker.runOptions = ""
        params.gatk_launch = '/gatk-4.0.0.0/gatk'
    }

    aws {
         params {
            genome     = "s3://cbcrg-eu/callings-data/genome.fa"
            reads      = "s3://cbcrg-eu/callings-data/reads/rep*_{1,2}.fq.gz"
            variants   = "s3://cbcrg-eu/callings-data/known_variants.vcf.gz"
            blacklist  = "s3://cbcrg-eu/callings-data/blacklist.bed"
            results    = "s3://cbcrg-eu/callings-results"
         }
    }

    cluster {
        params {
            genome    = "$baseDir/data/genome.fa"
            reads     = "$baseDir/data/reads/rep*_{1,2}.fq.gz"
            variants  = "$baseDir/data/known_variants.vcf.gz"
            blacklist = "$baseDir/data/blacklist.bed"
        }

        process {
            executor = 'crg'
            penv = 'smp'
            queue = 'cn-el7'
            memory = 16.GB
            errorStrategy = 'finish'
            scratch=true

            $1B_prepare_genome_picard {
                memory = 64.GB
            }

            $1C_prepare_star_genome_index {
                cpus = 2
                memory = 16.GB
            }

            $2_rnaseq_mapping_star {
                cpus = 2
                memory = 16.GB
            }

            $3_rnaseq_gatk_splitNcigar {
                memory = 48.GB
            }

            $4_rnaseq_gatk_recalibrate {
                memory = 48.GB
            }

            $5_rnaseq_call_variants {
                memory = 48.GB
            }

            $6C_ASE_knownSNPs {
                memory = 48.GB
            }
        }

    }
}

/* mail {
    smtp.host = 'mailbox.informatik.hu-berlin.de'
    smtp.port = 587
    smtp.user = 'wittcarx@informatik.hu-berlin.de'
} */
